version: '3.3'
networks:
  project:
    driver: "bridge"
services:
    web:
        build: ./backend
        ports:
            - "5000:5000"
        volumes:
            - ./backend:/code
        networks:
            - project

    react:
      build: 
        context: .
        dockerfile: ./frontend/Dockerfile.react
      image: local/react
      volumes:
        - ./frontend:/usr/src/app
        - /usr/src/app/node_modules/    # mounts empty folder so npm can install on the image
      restart: always
      environment:
        - CHOKIDAR_USEPOLLING=true      # enable fs event forwarding for file change detection (webpack)
      ports:                            # these services all share ports in Dev mode (see network_mode)
        # - 3000:3000                     # defines port mapping for React dev server
        - 3001:3000                     # defines port mapping for Express API server
        - 3306:3306                     # defines port mapping for MySql
      command: npm run react:start
      networks:
        - project
    nginx:
      image: nginx:latest
      container_name: webserver
      restart: unless-stopped
      ports:
        - 8000:8000
        - 443:443
      volumes:
        # - ./nginx.conf:/etc/nginx/nginx.conf
        - ./nginx.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - web
        - react
      networks:
        - project
            
    # redis:
    #     image: redis
    # db:
    #   image: mysql:5.7
    #   restart: "no"
    #   #volumes:
    #     #- ./data/mysql:/var/lib/mysql  # Mac/Linux: uncomment to persist data
    #   network_mode: service:react       # share this network with React service
    #   environment:
    #     - MYSQL_DATABASE=react
    #     - MYSQL_USER=root
    #     - MYSQL_ROOT_PASSWORD=root